# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Notes UI Behave Test Demo

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  schedule:
    - cron: '5 2 * * SUN'
  workflow_dispatch:

env:
  BASE_URL: ${{ secrets.BASE_URL }}
  BROWSER: ${{ secrets.BROWSER }}
  HEADLESS: ${{ secrets.HEADLESS }}

permissions:
  contents: read
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Create core directory
      run: |
        mkdir core-python
        cd core-python/
        pwd

    - name: Clone core framework repository
      uses: actions/checkout@v3
      with:
        repository: brian-dev/core-python
        path: core-python/

    - name: Clone project repository
      uses: actions/checkout@v3
      with:
        path: core-python/${{ github.event.repository.name }}

    - name: Clone project dependent repository
      uses: actions/checkout@v3
      with:
        path: core-python/notes_api

    - name: Navigate to project repo
      run: |
        pwd
        cd core-python/${{ github.event.repository.name }}
        pwd

    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        cd core-python
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        cd ${{ github.event.repository.name }}
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Test on schedule with behave
      if: ${{ github.event_name == 'schedule' }}
      run: |
        cd core-python/${{ github.event.repository.name }}
        behave --alluredir=allure-results

    - name: Test with behave
      run: |
        pwd
        behave

    - name: Get Allure history
      uses: actions/checkout@v3
      if: ${{ github.event_name == 'schedule' }}
      continue-on-error: true
      with:
        ref: gh-pages_old
        path: gh-pages_old

    - name: Generate Test Report
      uses: simple-elf/allure-report-action@master
      if: ${{ github.event_name == 'schedule' }}
      id: allure-report
      with:
        allure_results: allure-results
        gh_pages: gh-pages_old
        allure_report: allure-report
        allure_history: allure-history

    - name: Deploy report to Github Pages
      if: ${{ github.event_name == 'schedule' }}
      uses: peaceiris/actions-gh-pages@v3
      env:
        PERSONAL_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
        PUBLISH_BRANCH: gh-pages_old
        PUBLISH_DIR: allure-history

    - name: Configure AWS Credentials
      if: ${{ github.event_name == 'schedule' }}
      uses: aws-actions/configure-aws-credentials@v3
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

    - name: Copy files to the test website with the AWS CLI
      if: ${{ github.event_name == 'schedule' }}
      run: |
        aws s3 sync allure-report s3://demo-allure-results/
